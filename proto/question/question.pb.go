// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/question/question.proto

package question

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Question struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId        int32                  `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Question      string                 `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Question) Reset() {
	*x = Question{}
	mi := &file_proto_question_question_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{0}
}

func (x *Question) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Question) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Question) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *Question) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Question) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int32                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Question      string                 `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQuestionRequest) Reset() {
	*x = CreateQuestionRequest{}
	mi := &file_proto_question_question_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionRequest) ProtoMessage() {}

func (x *CreateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionRequest.ProtoReflect.Descriptor instead.
func (*CreateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{1}
}

func (x *CreateQuestionRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CreateQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type CreateQuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      *Question              `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQuestionResponse) Reset() {
	*x = CreateQuestionResponse{}
	mi := &file_proto_question_question_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionResponse) ProtoMessage() {}

func (x *CreateQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionResponse.ProtoReflect.Descriptor instead.
func (*CreateQuestionResponse) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{2}
}

func (x *CreateQuestionResponse) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type FindQuestionByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindQuestionByIDRequest) Reset() {
	*x = FindQuestionByIDRequest{}
	mi := &file_proto_question_question_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindQuestionByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindQuestionByIDRequest) ProtoMessage() {}

func (x *FindQuestionByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindQuestionByIDRequest.ProtoReflect.Descriptor instead.
func (*FindQuestionByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{3}
}

func (x *FindQuestionByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindQuestionByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      *Question              `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindQuestionByIDResponse) Reset() {
	*x = FindQuestionByIDResponse{}
	mi := &file_proto_question_question_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindQuestionByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindQuestionByIDResponse) ProtoMessage() {}

func (x *FindQuestionByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindQuestionByIDResponse.ProtoReflect.Descriptor instead.
func (*FindQuestionByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{4}
}

func (x *FindQuestionByIDResponse) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type FindAllQuestionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllQuestionsRequest) Reset() {
	*x = FindAllQuestionsRequest{}
	mi := &file_proto_question_question_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllQuestionsRequest) ProtoMessage() {}

func (x *FindAllQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllQuestionsRequest.ProtoReflect.Descriptor instead.
func (*FindAllQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{5}
}

type FindAllQuestionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Questions     []*Question            `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllQuestionsResponse) Reset() {
	*x = FindAllQuestionsResponse{}
	mi := &file_proto_question_question_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllQuestionsResponse) ProtoMessage() {}

func (x *FindAllQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllQuestionsResponse.ProtoReflect.Descriptor instead.
func (*FindAllQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{6}
}

func (x *FindAllQuestionsResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type FindAllQuestionsByPostIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int32                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllQuestionsByPostIDRequest) Reset() {
	*x = FindAllQuestionsByPostIDRequest{}
	mi := &file_proto_question_question_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllQuestionsByPostIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllQuestionsByPostIDRequest) ProtoMessage() {}

func (x *FindAllQuestionsByPostIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllQuestionsByPostIDRequest.ProtoReflect.Descriptor instead.
func (*FindAllQuestionsByPostIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{7}
}

func (x *FindAllQuestionsByPostIDRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type FindAllQuestionsByPostIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Questions     []*Question            `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllQuestionsByPostIDResponse) Reset() {
	*x = FindAllQuestionsByPostIDResponse{}
	mi := &file_proto_question_question_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllQuestionsByPostIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllQuestionsByPostIDResponse) ProtoMessage() {}

func (x *FindAllQuestionsByPostIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllQuestionsByPostIDResponse.ProtoReflect.Descriptor instead.
func (*FindAllQuestionsByPostIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{8}
}

func (x *FindAllQuestionsByPostIDResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type PatchQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId        int32                  `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Question      string                 `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchQuestionRequest) Reset() {
	*x = PatchQuestionRequest{}
	mi := &file_proto_question_question_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchQuestionRequest) ProtoMessage() {}

func (x *PatchQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchQuestionRequest.ProtoReflect.Descriptor instead.
func (*PatchQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{9}
}

func (x *PatchQuestionRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchQuestionRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *PatchQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type PatchQuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      *Question              `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchQuestionResponse) Reset() {
	*x = PatchQuestionResponse{}
	mi := &file_proto_question_question_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchQuestionResponse) ProtoMessage() {}

func (x *PatchQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchQuestionResponse.ProtoReflect.Descriptor instead.
func (*PatchQuestionResponse) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{10}
}

func (x *PatchQuestionResponse) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type DeleteQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQuestionRequest) Reset() {
	*x = DeleteQuestionRequest{}
	mi := &file_proto_question_question_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionRequest) ProtoMessage() {}

func (x *DeleteQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionRequest.ProtoReflect.Descriptor instead.
func (*DeleteQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteQuestionRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteQuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQuestionResponse) Reset() {
	*x = DeleteQuestionResponse{}
	mi := &file_proto_question_question_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionResponse) ProtoMessage() {}

func (x *DeleteQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_question_question_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionResponse.ProtoReflect.Descriptor instead.
func (*DeleteQuestionResponse) Descriptor() ([]byte, []int) {
	return file_proto_question_question_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteQuestionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_question_question_proto protoreflect.FileDescriptor

const file_proto_question_question_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/question/question.proto\x12\bquestion\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc5\x01\n" +
	"\bQuestion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\apost_id\x18\x02 \x01(\x05R\x06postId\x12\x1a\n" +
	"\bquestion\x18\x03 \x01(\tR\bquestion\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"L\n" +
	"\x15CreateQuestionRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x05R\x06postId\x12\x1a\n" +
	"\bquestion\x18\x02 \x01(\tR\bquestion\"H\n" +
	"\x16CreateQuestionResponse\x12.\n" +
	"\bquestion\x18\x01 \x01(\v2\x12.question.QuestionR\bquestion\")\n" +
	"\x17FindQuestionByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"J\n" +
	"\x18FindQuestionByIDResponse\x12.\n" +
	"\bquestion\x18\x01 \x01(\v2\x12.question.QuestionR\bquestion\"\x19\n" +
	"\x17FindAllQuestionsRequest\"L\n" +
	"\x18FindAllQuestionsResponse\x120\n" +
	"\tquestions\x18\x01 \x03(\v2\x12.question.QuestionR\tquestions\":\n" +
	"\x1fFindAllQuestionsByPostIDRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x05R\x06postId\"T\n" +
	" FindAllQuestionsByPostIDResponse\x120\n" +
	"\tquestions\x18\x01 \x03(\v2\x12.question.QuestionR\tquestions\"[\n" +
	"\x14PatchQuestionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\apost_id\x18\x02 \x01(\x05R\x06postId\x12\x1a\n" +
	"\bquestion\x18\x03 \x01(\tR\bquestion\"G\n" +
	"\x15PatchQuestionResponse\x12.\n" +
	"\bquestion\x18\x01 \x01(\v2\x12.question.QuestionR\bquestion\"'\n" +
	"\x15DeleteQuestionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"2\n" +
	"\x16DeleteQuestionResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xb6\x04\n" +
	"\x0fQuestionService\x12S\n" +
	"\x0eCreateQuestion\x12\x1f.question.CreateQuestionRequest\x1a .question.CreateQuestionResponse\x12Y\n" +
	"\x10FindQuestionByID\x12!.question.FindQuestionByIDRequest\x1a\".question.FindQuestionByIDResponse\x12Y\n" +
	"\x10FindAllQuestions\x12!.question.FindAllQuestionsRequest\x1a\".question.FindAllQuestionsResponse\x12q\n" +
	"\x18FindAllQuestionsByPostID\x12).question.FindAllQuestionsByPostIDRequest\x1a*.question.FindAllQuestionsByPostIDResponse\x12P\n" +
	"\rPatchQuestion\x12\x1e.question.PatchQuestionRequest\x1a\x1f.question.PatchQuestionResponse\x12S\n" +
	"\x0eDeleteQuestion\x12\x1f.question.DeleteQuestionRequest\x1a .question.DeleteQuestionResponseB\x10Z\x0eproto/questionb\x06proto3"

var (
	file_proto_question_question_proto_rawDescOnce sync.Once
	file_proto_question_question_proto_rawDescData []byte
)

func file_proto_question_question_proto_rawDescGZIP() []byte {
	file_proto_question_question_proto_rawDescOnce.Do(func() {
		file_proto_question_question_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_question_question_proto_rawDesc), len(file_proto_question_question_proto_rawDesc)))
	})
	return file_proto_question_question_proto_rawDescData
}

var file_proto_question_question_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_question_question_proto_goTypes = []any{
	(*Question)(nil),                         // 0: question.Question
	(*CreateQuestionRequest)(nil),            // 1: question.CreateQuestionRequest
	(*CreateQuestionResponse)(nil),           // 2: question.CreateQuestionResponse
	(*FindQuestionByIDRequest)(nil),          // 3: question.FindQuestionByIDRequest
	(*FindQuestionByIDResponse)(nil),         // 4: question.FindQuestionByIDResponse
	(*FindAllQuestionsRequest)(nil),          // 5: question.FindAllQuestionsRequest
	(*FindAllQuestionsResponse)(nil),         // 6: question.FindAllQuestionsResponse
	(*FindAllQuestionsByPostIDRequest)(nil),  // 7: question.FindAllQuestionsByPostIDRequest
	(*FindAllQuestionsByPostIDResponse)(nil), // 8: question.FindAllQuestionsByPostIDResponse
	(*PatchQuestionRequest)(nil),             // 9: question.PatchQuestionRequest
	(*PatchQuestionResponse)(nil),            // 10: question.PatchQuestionResponse
	(*DeleteQuestionRequest)(nil),            // 11: question.DeleteQuestionRequest
	(*DeleteQuestionResponse)(nil),           // 12: question.DeleteQuestionResponse
	(*timestamppb.Timestamp)(nil),            // 13: google.protobuf.Timestamp
}
var file_proto_question_question_proto_depIdxs = []int32{
	13, // 0: question.Question.created_at:type_name -> google.protobuf.Timestamp
	13, // 1: question.Question.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: question.CreateQuestionResponse.question:type_name -> question.Question
	0,  // 3: question.FindQuestionByIDResponse.question:type_name -> question.Question
	0,  // 4: question.FindAllQuestionsResponse.questions:type_name -> question.Question
	0,  // 5: question.FindAllQuestionsByPostIDResponse.questions:type_name -> question.Question
	0,  // 6: question.PatchQuestionResponse.question:type_name -> question.Question
	1,  // 7: question.QuestionService.CreateQuestion:input_type -> question.CreateQuestionRequest
	3,  // 8: question.QuestionService.FindQuestionByID:input_type -> question.FindQuestionByIDRequest
	5,  // 9: question.QuestionService.FindAllQuestions:input_type -> question.FindAllQuestionsRequest
	7,  // 10: question.QuestionService.FindAllQuestionsByPostID:input_type -> question.FindAllQuestionsByPostIDRequest
	9,  // 11: question.QuestionService.PatchQuestion:input_type -> question.PatchQuestionRequest
	11, // 12: question.QuestionService.DeleteQuestion:input_type -> question.DeleteQuestionRequest
	2,  // 13: question.QuestionService.CreateQuestion:output_type -> question.CreateQuestionResponse
	4,  // 14: question.QuestionService.FindQuestionByID:output_type -> question.FindQuestionByIDResponse
	6,  // 15: question.QuestionService.FindAllQuestions:output_type -> question.FindAllQuestionsResponse
	8,  // 16: question.QuestionService.FindAllQuestionsByPostID:output_type -> question.FindAllQuestionsByPostIDResponse
	10, // 17: question.QuestionService.PatchQuestion:output_type -> question.PatchQuestionResponse
	12, // 18: question.QuestionService.DeleteQuestion:output_type -> question.DeleteQuestionResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_question_question_proto_init() }
func file_proto_question_question_proto_init() {
	if File_proto_question_question_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_question_question_proto_rawDesc), len(file_proto_question_question_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_question_question_proto_goTypes,
		DependencyIndexes: file_proto_question_question_proto_depIdxs,
		MessageInfos:      file_proto_question_question_proto_msgTypes,
	}.Build()
	File_proto_question_question_proto = out.File
	file_proto_question_question_proto_goTypes = nil
	file_proto_question_question_proto_depIdxs = nil
}
