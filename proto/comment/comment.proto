syntax = "proto3";

package comment;

option go_package = "github.com/MingPV/PostService/proto/commentpb";

message Comment {
  int32 comment_id = 1;
  int32 post_id = 2;
  string comment_by = 3;
  int32 parent_id = 4;
  string detail = 5;
  string created_at = 6;
  string updated_at = 7;
}

message CreateCommentRequest {
  int32 post_id = 1;
  string comment_by = 2;
  int32 parent_id = 3;
  string detail = 4;
}

message CreateCommentResponse {
  Comment comment = 1;
}

message FindCommentByIDRequest {
  int32 id = 1;
}

message FindCommentByIDResponse {
  Comment comment = 1;
}

message FindCommentsByPostIDRequest {
	int32 post_id = 1;
}

message FindCommentsByPostIDResponse {
	repeated Comment comments = 1;
}

message FindCommentsByUserIDRequest {
	string user_id = 1;
}

message FindCommentsByUserIDResponse {
	repeated Comment comments = 1;
}

message FindCommentsByParentIDRequest {
	int32 parent_id = 1;
}

message FindCommentsByParentIDResponse {
	repeated Comment comments = 1;
}

message FindAllCommentsRequest {}

message FindAllCommentsResponse {
  repeated Comment comments = 1;
}

message PatchCommentRequest {
  int32 id = 1;
  string detail = 2;
}

message PatchCommentResponse {
  Comment comment = 1;
}

message DeleteCommentRequest {
  int32 id = 1;
}

message DeleteCommentResponse {
  string message = 1;
}

service CommentService {
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
  rpc FindCommentByID(FindCommentByIDRequest) returns (FindCommentByIDResponse);
	rpc FindCommentsByPostID(FindCommentsByPostIDRequest) returns (FindCommentsByPostIDResponse);
	rpc FindCommentsByUserID(FindCommentsByUserIDRequest) returns (FindCommentsByUserIDResponse);
	rpc FindCommentsByParentID(FindCommentsByParentIDRequest) returns (FindCommentsByParentIDResponse);
  rpc FindAllComments(FindAllCommentsRequest) returns (FindAllCommentsResponse);
  rpc PatchComment(PatchCommentRequest) returns (PatchCommentResponse);
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);
}
