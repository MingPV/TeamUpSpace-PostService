// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: proto/comment/comment.proto

package commentpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int32                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	PostId        int32                  `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	CommentBy     string                 `protobuf:"bytes,3,opt,name=comment_by,json=commentBy,proto3" json:"comment_by,omitempty"`
	ParentId      int32                  `protobuf:"varint,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Detail        string                 `protobuf:"bytes,5,opt,name=detail,proto3" json:"detail,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_proto_comment_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetCommentId() int32 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *Comment) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Comment) GetCommentBy() string {
	if x != nil {
		return x.CommentBy
	}
	return ""
}

func (x *Comment) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Comment) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *Comment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Comment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int32                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	CommentBy     string                 `protobuf:"bytes,2,opt,name=comment_by,json=commentBy,proto3" json:"comment_by,omitempty"`
	ParentId      int32                  `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Detail        string                 `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCommentRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CreateCommentRequest) GetCommentBy() string {
	if x != nil {
		return x.CommentBy
	}
	return ""
}

func (x *CreateCommentRequest) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateCommentRequest) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type FindCommentByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindCommentByIDRequest) Reset() {
	*x = FindCommentByIDRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCommentByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentByIDRequest) ProtoMessage() {}

func (x *FindCommentByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentByIDRequest.ProtoReflect.Descriptor instead.
func (*FindCommentByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{3}
}

func (x *FindCommentByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindCommentByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindCommentByIDResponse) Reset() {
	*x = FindCommentByIDResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCommentByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentByIDResponse) ProtoMessage() {}

func (x *FindCommentByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentByIDResponse.ProtoReflect.Descriptor instead.
func (*FindCommentByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{4}
}

func (x *FindCommentByIDResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type FindCommentsByPostIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int32                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindCommentsByPostIDRequest) Reset() {
	*x = FindCommentsByPostIDRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCommentsByPostIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentsByPostIDRequest) ProtoMessage() {}

func (x *FindCommentsByPostIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentsByPostIDRequest.ProtoReflect.Descriptor instead.
func (*FindCommentsByPostIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{5}
}

func (x *FindCommentsByPostIDRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type FindCommentsByPostIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindCommentsByPostIDResponse) Reset() {
	*x = FindCommentsByPostIDResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCommentsByPostIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentsByPostIDResponse) ProtoMessage() {}

func (x *FindCommentsByPostIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentsByPostIDResponse.ProtoReflect.Descriptor instead.
func (*FindCommentsByPostIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{6}
}

func (x *FindCommentsByPostIDResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type FindCommentsByUserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindCommentsByUserIDRequest) Reset() {
	*x = FindCommentsByUserIDRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCommentsByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentsByUserIDRequest) ProtoMessage() {}

func (x *FindCommentsByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentsByUserIDRequest.ProtoReflect.Descriptor instead.
func (*FindCommentsByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{7}
}

func (x *FindCommentsByUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FindCommentsByUserIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindCommentsByUserIDResponse) Reset() {
	*x = FindCommentsByUserIDResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCommentsByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentsByUserIDResponse) ProtoMessage() {}

func (x *FindCommentsByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentsByUserIDResponse.ProtoReflect.Descriptor instead.
func (*FindCommentsByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{8}
}

func (x *FindCommentsByUserIDResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type FindCommentsByParentIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentId      int32                  `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindCommentsByParentIDRequest) Reset() {
	*x = FindCommentsByParentIDRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCommentsByParentIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentsByParentIDRequest) ProtoMessage() {}

func (x *FindCommentsByParentIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentsByParentIDRequest.ProtoReflect.Descriptor instead.
func (*FindCommentsByParentIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{9}
}

func (x *FindCommentsByParentIDRequest) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type FindCommentsByParentIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindCommentsByParentIDResponse) Reset() {
	*x = FindCommentsByParentIDResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCommentsByParentIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentsByParentIDResponse) ProtoMessage() {}

func (x *FindCommentsByParentIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentsByParentIDResponse.ProtoReflect.Descriptor instead.
func (*FindCommentsByParentIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{10}
}

func (x *FindCommentsByParentIDResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type FindAllCommentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllCommentsRequest) Reset() {
	*x = FindAllCommentsRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllCommentsRequest) ProtoMessage() {}

func (x *FindAllCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllCommentsRequest.ProtoReflect.Descriptor instead.
func (*FindAllCommentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{11}
}

type FindAllCommentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllCommentsResponse) Reset() {
	*x = FindAllCommentsResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllCommentsResponse) ProtoMessage() {}

func (x *FindAllCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllCommentsResponse.ProtoReflect.Descriptor instead.
func (*FindAllCommentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{12}
}

func (x *FindAllCommentsResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type PatchCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Detail        string                 `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchCommentRequest) Reset() {
	*x = PatchCommentRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchCommentRequest) ProtoMessage() {}

func (x *PatchCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchCommentRequest.ProtoReflect.Descriptor instead.
func (*PatchCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{13}
}

func (x *PatchCommentRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchCommentRequest) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type PatchCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchCommentResponse) Reset() {
	*x = PatchCommentResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchCommentResponse) ProtoMessage() {}

func (x *PatchCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchCommentResponse.ProtoReflect.Descriptor instead.
func (*PatchCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{14}
}

func (x *PatchCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteCommentRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_comment_comment_proto protoreflect.FileDescriptor

const file_proto_comment_comment_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/comment/comment.proto\x12\acomment\"\xd3\x01\n" +
	"\aComment\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x05R\tcommentId\x12\x17\n" +
	"\apost_id\x18\x02 \x01(\x05R\x06postId\x12\x1d\n" +
	"\n" +
	"comment_by\x18\x03 \x01(\tR\tcommentBy\x12\x1b\n" +
	"\tparent_id\x18\x04 \x01(\x05R\bparentId\x12\x16\n" +
	"\x06detail\x18\x05 \x01(\tR\x06detail\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\tR\tupdatedAt\"\x83\x01\n" +
	"\x14CreateCommentRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x05R\x06postId\x12\x1d\n" +
	"\n" +
	"comment_by\x18\x02 \x01(\tR\tcommentBy\x12\x1b\n" +
	"\tparent_id\x18\x03 \x01(\x05R\bparentId\x12\x16\n" +
	"\x06detail\x18\x04 \x01(\tR\x06detail\"C\n" +
	"\x15CreateCommentResponse\x12*\n" +
	"\acomment\x18\x01 \x01(\v2\x10.comment.CommentR\acomment\"(\n" +
	"\x16FindCommentByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"E\n" +
	"\x17FindCommentByIDResponse\x12*\n" +
	"\acomment\x18\x01 \x01(\v2\x10.comment.CommentR\acomment\"6\n" +
	"\x1bFindCommentsByPostIDRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x05R\x06postId\"L\n" +
	"\x1cFindCommentsByPostIDResponse\x12,\n" +
	"\bcomments\x18\x01 \x03(\v2\x10.comment.CommentR\bcomments\"6\n" +
	"\x1bFindCommentsByUserIDRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"L\n" +
	"\x1cFindCommentsByUserIDResponse\x12,\n" +
	"\bcomments\x18\x01 \x03(\v2\x10.comment.CommentR\bcomments\"<\n" +
	"\x1dFindCommentsByParentIDRequest\x12\x1b\n" +
	"\tparent_id\x18\x01 \x01(\x05R\bparentId\"N\n" +
	"\x1eFindCommentsByParentIDResponse\x12,\n" +
	"\bcomments\x18\x01 \x03(\v2\x10.comment.CommentR\bcomments\"\x18\n" +
	"\x16FindAllCommentsRequest\"G\n" +
	"\x17FindAllCommentsResponse\x12,\n" +
	"\bcomments\x18\x01 \x03(\v2\x10.comment.CommentR\bcomments\"=\n" +
	"\x13PatchCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x16\n" +
	"\x06detail\x18\x02 \x01(\tR\x06detail\"B\n" +
	"\x14PatchCommentResponse\x12*\n" +
	"\acomment\x18\x01 \x01(\v2\x10.comment.CommentR\acomment\"&\n" +
	"\x14DeleteCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"1\n" +
	"\x15DeleteCommentResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xde\x05\n" +
	"\x0eCommentService\x12N\n" +
	"\rCreateComment\x12\x1d.comment.CreateCommentRequest\x1a\x1e.comment.CreateCommentResponse\x12T\n" +
	"\x0fFindCommentByID\x12\x1f.comment.FindCommentByIDRequest\x1a .comment.FindCommentByIDResponse\x12c\n" +
	"\x14FindCommentsByPostID\x12$.comment.FindCommentsByPostIDRequest\x1a%.comment.FindCommentsByPostIDResponse\x12c\n" +
	"\x14FindCommentsByUserID\x12$.comment.FindCommentsByUserIDRequest\x1a%.comment.FindCommentsByUserIDResponse\x12i\n" +
	"\x16FindCommentsByParentID\x12&.comment.FindCommentsByParentIDRequest\x1a'.comment.FindCommentsByParentIDResponse\x12T\n" +
	"\x0fFindAllComments\x12\x1f.comment.FindAllCommentsRequest\x1a .comment.FindAllCommentsResponse\x12K\n" +
	"\fPatchComment\x12\x1c.comment.PatchCommentRequest\x1a\x1d.comment.PatchCommentResponse\x12N\n" +
	"\rDeleteComment\x12\x1d.comment.DeleteCommentRequest\x1a\x1e.comment.DeleteCommentResponseB/Z-github.com/MingPV/PostService/proto/commentpbb\x06proto3"

var (
	file_proto_comment_comment_proto_rawDescOnce sync.Once
	file_proto_comment_comment_proto_rawDescData []byte
)

func file_proto_comment_comment_proto_rawDescGZIP() []byte {
	file_proto_comment_comment_proto_rawDescOnce.Do(func() {
		file_proto_comment_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_comment_comment_proto_rawDesc), len(file_proto_comment_comment_proto_rawDesc)))
	})
	return file_proto_comment_comment_proto_rawDescData
}

var file_proto_comment_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_comment_comment_proto_goTypes = []any{
	(*Comment)(nil),                        // 0: comment.Comment
	(*CreateCommentRequest)(nil),           // 1: comment.CreateCommentRequest
	(*CreateCommentResponse)(nil),          // 2: comment.CreateCommentResponse
	(*FindCommentByIDRequest)(nil),         // 3: comment.FindCommentByIDRequest
	(*FindCommentByIDResponse)(nil),        // 4: comment.FindCommentByIDResponse
	(*FindCommentsByPostIDRequest)(nil),    // 5: comment.FindCommentsByPostIDRequest
	(*FindCommentsByPostIDResponse)(nil),   // 6: comment.FindCommentsByPostIDResponse
	(*FindCommentsByUserIDRequest)(nil),    // 7: comment.FindCommentsByUserIDRequest
	(*FindCommentsByUserIDResponse)(nil),   // 8: comment.FindCommentsByUserIDResponse
	(*FindCommentsByParentIDRequest)(nil),  // 9: comment.FindCommentsByParentIDRequest
	(*FindCommentsByParentIDResponse)(nil), // 10: comment.FindCommentsByParentIDResponse
	(*FindAllCommentsRequest)(nil),         // 11: comment.FindAllCommentsRequest
	(*FindAllCommentsResponse)(nil),        // 12: comment.FindAllCommentsResponse
	(*PatchCommentRequest)(nil),            // 13: comment.PatchCommentRequest
	(*PatchCommentResponse)(nil),           // 14: comment.PatchCommentResponse
	(*DeleteCommentRequest)(nil),           // 15: comment.DeleteCommentRequest
	(*DeleteCommentResponse)(nil),          // 16: comment.DeleteCommentResponse
}
var file_proto_comment_comment_proto_depIdxs = []int32{
	0,  // 0: comment.CreateCommentResponse.comment:type_name -> comment.Comment
	0,  // 1: comment.FindCommentByIDResponse.comment:type_name -> comment.Comment
	0,  // 2: comment.FindCommentsByPostIDResponse.comments:type_name -> comment.Comment
	0,  // 3: comment.FindCommentsByUserIDResponse.comments:type_name -> comment.Comment
	0,  // 4: comment.FindCommentsByParentIDResponse.comments:type_name -> comment.Comment
	0,  // 5: comment.FindAllCommentsResponse.comments:type_name -> comment.Comment
	0,  // 6: comment.PatchCommentResponse.comment:type_name -> comment.Comment
	1,  // 7: comment.CommentService.CreateComment:input_type -> comment.CreateCommentRequest
	3,  // 8: comment.CommentService.FindCommentByID:input_type -> comment.FindCommentByIDRequest
	5,  // 9: comment.CommentService.FindCommentsByPostID:input_type -> comment.FindCommentsByPostIDRequest
	7,  // 10: comment.CommentService.FindCommentsByUserID:input_type -> comment.FindCommentsByUserIDRequest
	9,  // 11: comment.CommentService.FindCommentsByParentID:input_type -> comment.FindCommentsByParentIDRequest
	11, // 12: comment.CommentService.FindAllComments:input_type -> comment.FindAllCommentsRequest
	13, // 13: comment.CommentService.PatchComment:input_type -> comment.PatchCommentRequest
	15, // 14: comment.CommentService.DeleteComment:input_type -> comment.DeleteCommentRequest
	2,  // 15: comment.CommentService.CreateComment:output_type -> comment.CreateCommentResponse
	4,  // 16: comment.CommentService.FindCommentByID:output_type -> comment.FindCommentByIDResponse
	6,  // 17: comment.CommentService.FindCommentsByPostID:output_type -> comment.FindCommentsByPostIDResponse
	8,  // 18: comment.CommentService.FindCommentsByUserID:output_type -> comment.FindCommentsByUserIDResponse
	10, // 19: comment.CommentService.FindCommentsByParentID:output_type -> comment.FindCommentsByParentIDResponse
	12, // 20: comment.CommentService.FindAllComments:output_type -> comment.FindAllCommentsResponse
	14, // 21: comment.CommentService.PatchComment:output_type -> comment.PatchCommentResponse
	16, // 22: comment.CommentService.DeleteComment:output_type -> comment.DeleteCommentResponse
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_comment_comment_proto_init() }
func file_proto_comment_comment_proto_init() {
	if File_proto_comment_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_comment_comment_proto_rawDesc), len(file_proto_comment_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_comment_comment_proto_goTypes,
		DependencyIndexes: file_proto_comment_comment_proto_depIdxs,
		MessageInfos:      file_proto_comment_comment_proto_msgTypes,
	}.Build()
	File_proto_comment_comment_proto = out.File
	file_proto_comment_comment_proto_goTypes = nil
	file_proto_comment_comment_proto_depIdxs = nil
}
