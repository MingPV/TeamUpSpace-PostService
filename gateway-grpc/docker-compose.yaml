version: "3.8"

services:
  # gRPC-Gateway service
  grpc-gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "8080:8080"
    environment:
      - GRPC_SERVER_ENDPOINT=post-service:50066
      - HTTP_PORT=8080
    depends_on:
      - post-service
    networks:
      - post-network

  # Envoy proxy service
  envoy:
    image: envoyproxy/envoy:v1.30-latest
    ports:
      - "8081:8080"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml:ro
      - ./proto/post/post.pb:/etc/envoy/proto.pb:ro
    depends_on:
      - post-service
    networks:
      - post-network

  # Post Service (gRPC server)
  post-service:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "50066:50066"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=postservice
    depends_on:
      - postgres
    networks:
      - post-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postservice
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - post-network

networks:
  post-network:
    driver: bridge

volumes:
  postgres_data:
